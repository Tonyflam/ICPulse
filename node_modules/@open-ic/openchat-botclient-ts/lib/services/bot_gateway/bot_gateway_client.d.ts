import { HttpAgent } from "@dfinity/agent";
import type { AuthToken, BotClientConfig, Message, SendMessageResponse, CreateChannelResponse, DeleteChannelResponse, ChatDetailsResponse, ChatEventsResponse, ChatEventsCriteria } from "../../domain";
import type { Channel } from "../../domain/channel";
import { MsgpackCanisterAgent } from "../canisterAgent/msgpack";
export declare class BotGatewayClient extends MsgpackCanisterAgent {
    protected env: BotClientConfig;
    constructor(canisterId: string, agent: HttpAgent, env: BotClientConfig);
    sendMessage(message: Message, auth: AuthToken): Promise<SendMessageResponse>;
    createChannel(channel: Channel, auth: AuthToken): Promise<CreateChannelResponse>;
    deleteChannel(channelId: bigint, auth: AuthToken): Promise<DeleteChannelResponse>;
    chatDetails(auth: AuthToken, channelId?: bigint): Promise<ChatDetailsResponse>;
    chatEvents(auth: AuthToken, criteria: ChatEventsCriteria, channelId?: bigint): Promise<ChatEventsResponse>;
}
