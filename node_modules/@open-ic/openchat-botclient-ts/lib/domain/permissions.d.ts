import type { BotPermissions } from "../typebox/typebox";
export declare const chatPermissionList: readonly ["ChangeRoles", "UpdateGroup", "AddMembers", "InviteUsers", "RemoveMembers", "DeleteMessages", "PinMessages", "ReactToMessages", "MentionAllMembers", "StartVideoCall", "ReadMessages", "ReadMembership", "ReadChatDetails"];
type ChatPermissionType = typeof chatPermissionList;
export type ChatPermission = ChatPermissionType[number];
export declare const communityPermissionList: readonly ["ChangeRoles", "UpdateDetails", "InviteUsers", "RemoveMembers", "CreatePublicChannel", "CreatePrivateChannel", "ManageUserGroups"];
type CommunityPermissionType = typeof communityPermissionList;
export type CommunityPermission = CommunityPermissionType[number];
export declare const messagePermissionList: readonly ["Text", "Image", "Video", "Audio", "File", "Poll", "Crypto", "Giphy", "Prize", "P2pSwap", "VideoCall"];
type MessagePermissionType = typeof messagePermissionList;
export type MessagePermission = MessagePermissionType[number];
export type PermissionRole = "none" | "moderator" | "owner" | "admin" | "member";
type LowercaseFirstLetter<T extends string> = T extends `${infer First}${infer Rest}` ? `${Lowercase<First>}${Rest}` : T;
export type LowercaseChatPermission = LowercaseFirstLetter<Exclude<ChatPermission, "ReadMessages" | "ReadMembership" | "ReadChatDetails">>;
export type LowercaseMessagePermission = LowercaseFirstLetter<MessagePermission>;
export type LowercaseCommunityPermission = LowercaseFirstLetter<CommunityPermission>;
export type GroupPermissions = Record<LowercaseChatPermission, PermissionRole> & {
    messagePermissions: MessagePermissions;
    threadPermissions?: MessagePermissions;
};
export type CustomPermission = {
    subtype: string;
    role: PermissionRole;
};
export type MessagePermissions = Partial<Record<LowercaseMessagePermission, PermissionRole>> & {
    custom: CustomPermission[];
    default: PermissionRole;
};
export declare class Permissions {
    #private;
    private granted_permissions;
    constructor(granted_permissions: BotPermissions);
    static encodePermissions({ community, chat, message, }: {
        community: CommunityPermission[];
        chat: ChatPermission[];
        message: MessagePermission[];
    }): BotPermissions;
    hasMessagePermission(perm: MessagePermission): boolean;
    hasChatPermission(perm: ChatPermission): boolean;
    hasCommunityPermission(perm: CommunityPermission): boolean;
}
export {};
