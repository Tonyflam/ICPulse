import { ChatIdentifier, CommunityIdentifier } from "./identifiers";
export declare abstract class MergedActionScope {
    abstract readonly kind: "chat" | "community";
    abstract toString(): string;
    static fromString(scopeStr: string): MergedActionScope;
    isChatScope(): this is MergedActionChatScope;
    isCommunityScope(): this is MergedActionCommunityScope;
    abstract isParentOf(scope: MergedActionScope): this is MergedActionCommunityScope;
}
export declare class MergedActionChatScope extends MergedActionScope {
    readonly chat: ChatIdentifier;
    readonly thread?: number | undefined;
    readonly messageId?: bigint | undefined;
    readonly kind: "chat";
    constructor(chat: ChatIdentifier, thread?: number | undefined, messageId?: bigint | undefined);
    toString(): string;
    isParentOf(_: MergedActionScope): this is MergedActionCommunityScope;
}
export declare class MergedActionCommunityScope extends MergedActionScope {
    readonly communityId: CommunityIdentifier;
    readonly kind: "community";
    constructor(communityId: CommunityIdentifier);
    toString(): string;
    isParentOf(scope: MergedActionScope): this is MergedActionCommunityScope;
}
